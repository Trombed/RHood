c
user.portfolio[user.portfolio.length-1]
user.portfolio[0]
user.portfolio[user.portfolio.length]
user.portfolio[0]
user.portfolio.length[0]
user.portfolio.length
user.portfolio
new_valuation
c
user.portfolio[34]
user.portfolio
user.portfolio[0]
c
user.portfolio[0]
user.portfolio
c
user.portfolio[user.portfolio.length-1]
user.portfolio[0]
user.portfolio
c
user.portfolio[0]
user.portfolio
c
user.portfolio[34]
user.portfolio[0]
user.portfolio.length
user.portfolio
c
valuation.updated_at.in_time_zone('Eastern Time (US & Canada)')
valuation.updated_at
valuation
json.date
c
security[transaction.stock.ticker_symbol]['quote']
security[transaction.stock.ticker_symbol]['quote']['close']
c
security[transaction.stock.ticker_symbol]['quote']['close']
security[transaction.stock.ticker_symbol] 
transaction.shares
transaction
c
 security[transaction.stock.ticker_symbol]['quote']['close']
 security[transaction.stock.ticker_symbol]['quote']
 security[transaction.stock.ticker_symbol].quote
 security[transaction.stock.ticker_symbol] .quote
 security[transaction.stock.ticker_symbol] 
c
security
c
security
url
c
symbols
url
c
symbols
n
user.stocks_to_find
n
user.stocks_to_find
c
user.stocks_to_find
security
users
user
c
symbols
c
stock_to_find.flatten.uniq.join(",")
stock_to_find.flatten.uniq
stock_to_find.flatten
stock_to_find
c
stock_to_find
c
now
c
now.min
now.hour 
now.hour
now
c
@news
c
url
c
url
c
news
c
n
c
c'
news
n
news
n
url
n
url
exit
security['companiesPriceList'].each do |stock| puts stock['symbol'] end 
security['companiesPriceList'].each do |stock| puts stock end 
security['companiesPriceList'].each do |stock| 
security['companiesPriceList'][0]
security['companiesPriceList']
security['companiesPriceList'].symbol
security['companiesPriceList'].symbol]
security['companiesPriceList'][symbol]
symbol = transaction.stock.ticker_symbol
transaction.stock.ticker_symbol
transaction.stock
transaction
security['companiesPriceList']
security.companiesPriceList
security
exit
stock_to_find.flatten.uniq
stock_to_find
exit
stock_to_find.push(null)
stock_to_find.uniq
stock_to_find
c
exit
Rails.application.credentials.finapi
Rails.application.credentials
Rails.application.secrets.newsapi
Rails.application.secrets.newsapi[:api_key]
Rails.application.secrets.finapi[:api_key]
exit
Rails.application.secrets.finapi[:api_key]
c
current_user.stocks.empty?
current_user.stocks
current_user
c
@valuations
c
@transaction
c
@transaction
c
 @stock = Transaction.find_by(stock_id: 115) 
 @stock = Transaction.find_by(stock_id: params[:id]) 
 @stock = Transaction.find_by(params[:id]) 
params
c
user
user.funds += cost
cost
user.funds
c
user.funds
cost
c
user.funds
cost
c
user.funds
user
cost
c
cost
c
user.funds
@transaction
c
@transaction
c
params[shares]
params
@transaction.update(transaction_params)
@transaction.update
@transaction.shares
params
@transaction
c
@transaction
c
user.transactions
@transaction
params[:id]
params
c
@transaction
c
(@transaction.average_price + cost) / @transaction.shares
@transaction.average_price + cost
@transaction
@transaction.shares
c
@transaction.shares
shares
c
\c
c
shares
@transaction
c
@transaction
@transaction.shares
c
@transaction.shares
@transaction
c
@update
update
c
user.transactions
user.transaction
user.stock_transactions
user.stock_transaction
c
@transaction
c
@update
@transaction.shares
@transaction
@transaction.shares
@transaction
c
@update
c
a = current_user.stock_transactions.find_by(id: 115)
a
a = current_user.stock_transactions.find_by(id: 115)
a
a = current_user.stock_transactions.find_by(id: 118)
current_user.stock_transactions.find_by(id: 118)
current_user.stock_transactions.find_by(id: 117)
current_user.stock_transactions.find_by(id: 115)
current_user.stock_transactions.find_by(stock_id: 115)
current_user.stock_transactions.where("id = ?", 113)
current_user.stock_transactions
current_user.stocks
@update.id
@update
@update.nil?
@update
c
@update.nil?
@update.nil
@update
@update["user_id"]
@update.user_id
@update.id
@update
c
@update
c
@update.nil?
@update != nil
@update
c
